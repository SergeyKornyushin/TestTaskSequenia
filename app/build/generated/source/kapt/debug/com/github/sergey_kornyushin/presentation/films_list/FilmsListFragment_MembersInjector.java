// Generated by Dagger (https://dagger.dev).
package com.github.sergey_kornyushin.presentation.films_list;

import com.github.sergey_kornyushin.presentation.films_list.recycler_view.RVFilmsAdapter;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class FilmsListFragment_MembersInjector implements MembersInjector<FilmsListFragment> {
  private final Provider<RVFilmsAdapter> rvFilmsAdapterProvider;

  private final Provider<FilmsListPresenter.Base> presenterProvider;

  public FilmsListFragment_MembersInjector(Provider<RVFilmsAdapter> rvFilmsAdapterProvider,
      Provider<FilmsListPresenter.Base> presenterProvider) {
    this.rvFilmsAdapterProvider = rvFilmsAdapterProvider;
    this.presenterProvider = presenterProvider;
  }

  public static MembersInjector<FilmsListFragment> create(
      Provider<RVFilmsAdapter> rvFilmsAdapterProvider,
      Provider<FilmsListPresenter.Base> presenterProvider) {
    return new FilmsListFragment_MembersInjector(rvFilmsAdapterProvider, presenterProvider);
  }

  @Override
  public void injectMembers(FilmsListFragment instance) {
    injectRvFilmsAdapter(instance, rvFilmsAdapterProvider.get());
    injectPresenterProvider(instance, presenterProvider);
  }

  @InjectedFieldSignature("com.github.sergey_kornyushin.presentation.films_list.FilmsListFragment.rvFilmsAdapter")
  public static void injectRvFilmsAdapter(FilmsListFragment instance,
      RVFilmsAdapter rvFilmsAdapter) {
    instance.rvFilmsAdapter = rvFilmsAdapter;
  }

  @InjectedFieldSignature("com.github.sergey_kornyushin.presentation.films_list.FilmsListFragment.presenterProvider")
  public static void injectPresenterProvider(FilmsListFragment instance,
      Provider<FilmsListPresenter.Base> presenterProvider) {
    instance.presenterProvider = presenterProvider;
  }
}
