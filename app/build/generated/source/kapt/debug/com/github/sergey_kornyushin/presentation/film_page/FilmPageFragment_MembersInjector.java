// Generated by Dagger (https://dagger.dev).
package com.github.sergey_kornyushin.presentation.film_page;

import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class FilmPageFragment_MembersInjector implements MembersInjector<FilmPageFragment> {
  private final Provider<FilmPagePresenter.Base> presenterProvider;

  public FilmPageFragment_MembersInjector(Provider<FilmPagePresenter.Base> presenterProvider) {
    this.presenterProvider = presenterProvider;
  }

  public static MembersInjector<FilmPageFragment> create(
      Provider<FilmPagePresenter.Base> presenterProvider) {
    return new FilmPageFragment_MembersInjector(presenterProvider);
  }

  @Override
  public void injectMembers(FilmPageFragment instance) {
    injectPresenterProvider(instance, presenterProvider);
  }

  @InjectedFieldSignature("com.github.sergey_kornyushin.presentation.film_page.FilmPageFragment.presenterProvider")
  public static void injectPresenterProvider(FilmPageFragment instance,
      Provider<FilmPagePresenter.Base> presenterProvider) {
    instance.presenterProvider = presenterProvider;
  }
}
