// Generated by Dagger (https://dagger.dev).
package com.github.sergey_kornyushin.data.repository.mappers;

import com.github.sergey_kornyushin.common.ResourceProvider;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DomainListFiller_Base_Factory implements Factory<DomainListFiller.Base> {
  private final Provider<DomainRecyclerViewMapper.Base> domainRVMapperProvider;

  private final Provider<ResourceProvider> resourceProvider;

  public DomainListFiller_Base_Factory(
      Provider<DomainRecyclerViewMapper.Base> domainRVMapperProvider,
      Provider<ResourceProvider> resourceProvider) {
    this.domainRVMapperProvider = domainRVMapperProvider;
    this.resourceProvider = resourceProvider;
  }

  @Override
  public DomainListFiller.Base get() {
    return newInstance(domainRVMapperProvider.get(), resourceProvider.get());
  }

  public static DomainListFiller_Base_Factory create(
      Provider<DomainRecyclerViewMapper.Base> domainRVMapperProvider,
      Provider<ResourceProvider> resourceProvider) {
    return new DomainListFiller_Base_Factory(domainRVMapperProvider, resourceProvider);
  }

  public static DomainListFiller.Base newInstance(DomainRecyclerViewMapper.Base domainRVMapper,
      ResourceProvider resourceProvider) {
    return new DomainListFiller.Base(domainRVMapper, resourceProvider);
  }
}
