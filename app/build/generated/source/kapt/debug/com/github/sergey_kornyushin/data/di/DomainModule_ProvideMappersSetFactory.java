// Generated by Dagger (https://dagger.dev).
package com.github.sergey_kornyushin.data.di;

import com.github.sergey_kornyushin.common.ResourceProvider;
import com.github.sergey_kornyushin.data.database.mappers.MappersSet;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DomainModule_ProvideMappersSetFactory implements Factory<MappersSet> {
  private final Provider<ResourceProvider> resourceProvider;

  public DomainModule_ProvideMappersSetFactory(Provider<ResourceProvider> resourceProvider) {
    this.resourceProvider = resourceProvider;
  }

  @Override
  public MappersSet get() {
    return provideMappersSet(resourceProvider.get());
  }

  public static DomainModule_ProvideMappersSetFactory create(
      Provider<ResourceProvider> resourceProvider) {
    return new DomainModule_ProvideMappersSetFactory(resourceProvider);
  }

  public static MappersSet provideMappersSet(ResourceProvider resourceProvider) {
    return Preconditions.checkNotNullFromProvides(DomainModule.INSTANCE.provideMappersSet(resourceProvider));
  }
}
