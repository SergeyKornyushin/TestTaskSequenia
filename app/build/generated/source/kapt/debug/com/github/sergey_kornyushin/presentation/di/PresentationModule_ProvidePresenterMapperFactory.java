// Generated by Dagger (https://dagger.dev).
package com.github.sergey_kornyushin.presentation.di;

import com.github.sergey_kornyushin.presentation.mappers.PresenterMapper;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PresentationModule_ProvidePresenterMapperFactory implements Factory<PresenterMapper> {
  @Override
  public PresenterMapper get() {
    return providePresenterMapper();
  }

  public static PresentationModule_ProvidePresenterMapperFactory create() {
    return InstanceHolder.INSTANCE;
  }

  public static PresenterMapper providePresenterMapper() {
    return Preconditions.checkNotNullFromProvides(PresentationModule.INSTANCE.providePresenterMapper());
  }

  private static final class InstanceHolder {
    private static final PresentationModule_ProvidePresenterMapperFactory INSTANCE = new PresentationModule_ProvidePresenterMapperFactory();
  }
}
